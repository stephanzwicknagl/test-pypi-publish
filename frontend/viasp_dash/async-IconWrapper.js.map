{"version":3,"file":"async-IconWrapper.js","mappings":"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","sources":["webpack:///./node_modules/@iconify/react/dist/iconify.mjs","webpack:///./src/lib/fragments/IconWrapper.react.js"],"sourcesContent":["import React from 'react';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      // Allowed characters before id: [#;\"]\n      // Allowed characters after id: [)\"], .[a-z]\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n    // Matches or newer\n    lastValue && lastValue >= lastModified\n  ) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nlet policy;\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      createHTML: (s) => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) {\n    createPolicy();\n  }\n  return policy ? policy.createHTML(html) : html;\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    WebkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = {\n    ...defaultExtendedIconCustomisations,\n    inline: true,\n};\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG/SPAN, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline\n        ? inlineDefaults\n        : defaultExtendedIconCustomisations;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Create style\n    const style = {};\n    const customStyle = props.style || {};\n    // Create SVG component properties\n    const componentProps = {\n        ...(mode === 'svg' ? svgDefaults : {}),\n        ref,\n    };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case 'mode':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add icon stuff\n        componentProps.dangerouslySetInnerHTML = {\n            __html: cleanUpInnerHTML(replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact')),\n        };\n        return React.createElement('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return React.createElement('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: icon,\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (!data) {\n            // Icon data is not available\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                if (data !== null) {\n                    // Icon was not loaded\n                    this._loading = {\n                        name: icon,\n                        abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                    };\n                }\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render({\n            ...defaultIconProps,\n            ...icon.data,\n        }, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: true,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs };\n","import React from 'react';\nimport { Icon } from '@iconify/react';\n\nexport default function IconWrapper(props) {\n    // Render the Icon component with the passed props\n    return <Icon {...props} />;\n}\n"],"names":["matchIconName","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIconName","dashSeparated","join","icon","match","defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","mergeIconData","parent","child","obj1","obj2","mergeIconTransformations","key","internalGetIconData","data","tree","icons","aliases","create","currentProps","parse","forEach","parseIconSet","callback","names","not_found","Array","push","resolved","keys","concat","resolve","getIconsTree","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","getStorage","providerStorage","missing","Set","newStorage","addIconSet","storage","add","simpleNames","allowSimpleNames","allow","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","regex","randomPrefix","Date","now","toString","random","counter","replaceIDs","ids","exec","suffix","id","newID","escapedID","replace","RegExp","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","fetchModule","fetch","err","detectFetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","calculateMaxLength","type","send","params","getPath","iconsList","URLSearchParams","uri","defaultError","then","response","status","json","setTimeout","shouldAbort","catch","removeCallback","storages","items","loaderCallbacks","filter","row","idCounter","defaultConfig","initRedundancy","cfg","queries","cleanup","query","payload","queryCallback","doneCallback","query2","done","resourcesCount","startIndex","floor","list","nextIndex","startTime","lastError","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","failQuery","clearQueue","execNext","resource","status2","isError","queued","indexOf","moduleResponse","queriesPending","sendQuery","error","find","setIndex","getIndex","emptyCallback$1","redundancyCache","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","browserStorageCacheExpiration","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","parseInt","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","_window","window","getBrowserStorage","attr","iterateBrowserStorage","version","total2","i","minTime","parseItem","JSON","cached","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","emptyCallback","loadIcons","cleanedIcons","listToIcons","sortedIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","localStorage","has","sortIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","pendingIcons","iconsToLoad","iconsQueueFlag","icons2","api","target","redundancy","cachedReundancy","getRedundancyCache","sendAPIQuery","parsed","delete","store","set","from","stringify","lastValue","updateLastModified","assign","storeInBrowserStorage","console","iconsLoaderFlag","pendingCallbacksFlag","hasPending","oldLength","updateCallbacks","loadedNewIcons","loadNewIcons","pendingSources","bind","storeCallback","separator","flipFromString","custom","flip","str","trim","rotateFromString","defaultValue","units","value2","policy","cleanUpInnerHTML","html","trustedTypes","createPolicy","createHTML","s","defaultExtendedIconCustomisations","inline","svgDefaults","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","WebkitMask","mask","background","inlineDefaults","fixSize","document","IconifyPreload","preload","added","addIconToStorage","addIcon","addCollection","e","IconifyProviders","providers","IconComponent","constructor","props","super","this","state","_abortLoading","_loading","_setData","setState","_checkIcon","changed","_icon","iconName","getIconData","classes","onLoad","componentDidMount","componentDidUpdate","oldProps","componentWillUnmount","render","children","newProps","className","ref","defaultProps","customisations","valueType","mergeCustomisations","mode","style","customStyle","componentProps","color","fullIcon","fullCustomisations","box","transformations","tempValue","rotation","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","isUnsetKeyword","viewBox","iconToSVG","renderAttribs","verticalAlign","localCounter","dangerouslySetInnerHTML","__html","useMask","renderAttribsHTML","iconToHTML","svg","encodeSVGforURL","svgToData","_inline","_ref","Icon","IconWrapper","React"],"sourceRoot":""}